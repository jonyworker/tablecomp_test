// coreUtilities.scss

// 邊距屬性映射

$margin-props: (
    "": margin,
    "x": (
        margin-left,
        margin-right,
    ),
    "y": (
        margin-top,
        margin-bottom,
    ),
    "t": (
        margin-top,
    ),
    "e": (
        margin-right,
    ),
    "b": (
        margin-bottom,
    ),
    "s": (
        margin-left,
    ),
);
$padding-props: (
    "": padding,
    "x": (
        padding-left,
        padding-right,
    ),
    "y": (
        padding-top,
        padding-bottom,
    ),
    "t": (
        padding-top,
    ),
    "e": (
        padding-right,
    ),
    "b": (
        padding-bottom,
    ),
    "s": (
        padding-left,
    ),
);

// Mixin 響應式斷點 mixin，用於生成不同螢幕寬度的樣式
@mixin breakpoint($point) {
    @media (min-width: map-get($grid-breakpoints, $point)) {
        @content;
    }
}

.#{$prefix}d-inline {
    display: inline !important;
}
.#{$prefix}d-inline-block {
    display: inline-block !important;
}
.#{$prefix}d-block {
    display: block !important;
}
.#{$prefix}d-grid {
    display: grid !important;
}
.#{$prefix}d-table {
    display: table !important;
}
.#{$prefix}d-table-row {
    display: table-row !important;
}
.#{$prefix}d-table-cell {
    display: table-cell !important;
}
.#{$prefix}d-flex {
    display: flex !important;
}
.#{$prefix}d-inline-flex {
    display: inline-flex !important;
}
.#{$prefix}d-none {
    display: none !important;
}

// Flex utilities
.#{$prefix}flex-fill {
    flex: 1 1 auto !important;
}
.#{$prefix}flex-row {
    flex-direction: row !important;
}
.#{$prefix}flex-column {
    flex-direction: column !important;
}
.#{$prefix}flex-row-reverse {
    flex-direction: row-reverse !important;
}
.#{$prefix}flex-column-reverse {
    flex-direction: column-reverse !important;
}
.#{$prefix}flex-grow-0 {
    flex-grow: 0 !important;
}
.#{$prefix}flex-grow-1 {
    flex-grow: 1 !important;
}
.#{$prefix}flex-shrink-0 {
    flex-shrink: 0 !important;
}
.#{$prefix}flex-shrink-1 {
    flex-shrink: 1 !important;
}
.#{$prefix}flex-wrap {
    flex-wrap: wrap !important;
}
.#{$prefix}flex-nowrap {
    flex-wrap: nowrap !important;
}
.#{$prefix}flex-wrap-reverse {
    flex-wrap: wrap-reverse !important;
}

// Justify content
.#{$prefix}justify-content-start {
    justify-content: flex-start !important;
}
.#{$prefix}justify-content-end {
    justify-content: flex-end !important;
}
.#{$prefix}justify-content-center {
    justify-content: center !important;
}
.#{$prefix}justify-content-between {
    justify-content: space-between !important;
}
.#{$prefix}justify-content-around {
    justify-content: space-around !important;
}
.#{$prefix}justify-content-evenly {
    justify-content: space-evenly !important;
}

// Align items
.#{$prefix}align-items-start {
    align-items: flex-start !important;
}
.#{$prefix}align-items-end {
    align-items: flex-end !important;
}
.#{$prefix}align-items-center {
    align-items: center !important;
}
.#{$prefix}align-items-baseline {
    align-items: baseline !important;
}
.#{$prefix}align-items-stretch {
    align-items: stretch !important;
}

// Align content
.#{$prefix}align-content-start {
    align-content: flex-start !important;
}
.#{$prefix}align-content-end {
    align-content: flex-end !important;
}
.#{$prefix}align-content-center {
    align-content: center !important;
}
.#{$prefix}align-content-between {
    align-content: space-between !important;
}
.#{$prefix}align-content-around {
    align-content: space-around !important;
}
.#{$prefix}align-content-stretch {
    align-content: stretch !important;
}

// Align self
.#{$prefix}align-self-auto {
    align-self: auto !important;
}
.#{$prefix}align-self-start {
    align-self: flex-start !important;
}
.#{$prefix}align-self-end {
    align-self: flex-end !important;
}
.#{$prefix}align-self-center {
    align-self: center !important;
}
.#{$prefix}align-self-baseline {
    align-self: baseline !important;
}
.#{$prefix}align-self-stretch {
    align-self: stretch !important;
}

// Order
.#{$prefix}order-first {
    order: -1 !important;
}
@for $i from 0 through 5 {
    .#{$prefix}order-#{$i} {
        order: $i !important;
    }
}
.#{$prefix}order-last {
    order: 6 !important;
}

// Spacing utilities - margin
@each $infix, $props in $margin-props {
    // 生成數值邊距
    @each $space, $value in $spacers {
        .#{$prefix}m#{$infix}-#{$space} {
            @if type-of($props) == "list" {
                @each $prop in $props {
                    #{$prop}: $value !important;
                }
            } @else {
                #{$props}: $value !important;
            }
        }
    }

    // margin auto
    .#{$prefix}m#{$infix}-auto {
        @if type-of($props) == "list" {
            @each $prop in $props {
                #{$prop}: auto !important;
            }
        } @else {
            #{$props}: auto !important;
        }
    }
}

// Spacing utilities - padding
@each $infix, $props in $padding-props {
    // 生成數值邊距
    @each $space, $value in $spacers {
        .#{$prefix}p#{$infix}-#{$space} {
            @if type-of($props) == "list" {
                @each $prop in $props {
                    #{$prop}: $value !important;
                }
            } @else {
                #{$props}: $value !important;
            }
        }
    }
}

// Spacing utilities -- with BreakPoint
@each $breakpoint, $value in $grid-breakpoints {
    @include breakpoint($breakpoint) {
        .#{$prefix}d-#{$breakpoint}-inline {
            display: inline !important;
        }
        .#{$prefix}d-#{$breakpoint}-inline-block {
            display: inline-block !important;
        }
        .#{$prefix}d-#{$breakpoint}-block {
            display: block !important;
        }
        .#{$prefix}d-#{$breakpoint}-grid {
            display: grid !important;
        }
        .#{$prefix}d-#{$breakpoint}-table {
            display: table !important;
        }
        .#{$prefix}d-#{$breakpoint}-table-row {
            display: table-row !important;
        }
        .#{$prefix}d-#{$breakpoint}-table-cell {
            display: table-cell !important;
        }
        .#{$prefix}d-#{$breakpoint}-flex {
            display: flex !important;
        }
        .#{$prefix}d-#{$breakpoint}-inline-flex {
            display: inline-flex !important;
        }
        .#{$prefix}d-#{$breakpoint}-none {
            display: none !important;
        }

        // Flex utilities
        .#{$prefix}flex-#{$breakpoint}-fill {
            flex: 1 1 auto !important;
        }
        .#{$prefix}flex-#{$breakpoint}-row {
            flex-direction: row !important;
        }
        .#{$prefix}flex-#{$breakpoint}-column {
            flex-direction: column !important;
        }
        .#{$prefix}flex-#{$breakpoint}-row-reverse {
            flex-direction: row-reverse !important;
        }
        .#{$prefix}flex-#{$breakpoint}-column-reverse {
            flex-direction: column-reverse !important;
        }
        .#{$prefix}flex-#{$breakpoint}-grow-0 {
            flex-grow: 0 !important;
        }
        .#{$prefix}flex-#{$breakpoint}-grow-1 {
            flex-grow: 1 !important;
        }
        .#{$prefix}flex-#{$breakpoint}-shrink-0 {
            flex-shrink: 0 !important;
        }
        .#{$prefix}flex-#{$breakpoint}-shrink-1 {
            flex-shrink: 1 !important;
        }
        .#{$prefix}flex-#{$breakpoint}-wrap {
            flex-wrap: wrap !important;
        }
        .#{$prefix}flex-#{$breakpoint}-nowrap {
            flex-wrap: nowrap !important;
        }
        .#{$prefix}flex-#{$breakpoint}-wrap-reverse {
            flex-wrap: wrap-reverse !important;
        }

        // Justify content
        .#{$prefix}justify-content-#{$breakpoint}-start {
            justify-content: flex-start !important;
        }
        .#{$prefix}justify-content-#{$breakpoint}-end {
            justify-content: flex-end !important;
        }
        .#{$prefix}justify-content-#{$breakpoint}-center {
            justify-content: center !important;
        }
        .#{$prefix}justify-content-#{$breakpoint}-between {
            justify-content: space-between !important;
        }
        .#{$prefix}justify-content-#{$breakpoint}-around {
            justify-content: space-around !important;
        }
        .#{$prefix}justify-content-#{$breakpoint}-evenly {
            justify-content: space-evenly !important;
        }

        // Align items
        .#{$prefix}align-items-#{$breakpoint}-start {
            align-items: flex-start !important;
        }
        .#{$prefix}align-items-#{$breakpoint}-end {
            align-items: flex-end !important;
        }
        .#{$prefix}align-items-#{$breakpoint}-center {
            align-items: center !important;
        }
        .#{$prefix}align-items-#{$breakpoint}-baseline {
            align-items: baseline !important;
        }
        .#{$prefix}align-items-#{$breakpoint}-stretch {
            align-items: stretch !important;
        }

        // Align content
        .#{$prefix}align-content-#{$breakpoint}-start {
            align-content: flex-start !important;
        }
        .#{$prefix}align-content-#{$breakpoint}-end {
            align-content: flex-end !important;
        }
        .#{$prefix}align-content-#{$breakpoint}-center {
            align-content: center !important;
        }
        .#{$prefix}align-content-#{$breakpoint}-between {
            align-content: space-between !important;
        }
        .#{$prefix}align-content-#{$breakpoint}-around {
            align-content: space-around !important;
        }
        .#{$prefix}align-content-#{$breakpoint}-stretch {
            align-content: stretch !important;
        }

        // Align self
        .#{$prefix}align-self-#{$breakpoint}-auto {
            align-self: auto !important;
        }
        .#{$prefix}align-self-#{$breakpoint}-start {
            align-self: flex-start !important;
        }
        .#{$prefix}align-self-#{$breakpoint}-end {
            align-self: flex-end !important;
        }
        .#{$prefix}align-self-#{$breakpoint}-center {
            align-self: center !important;
        }
        .#{$prefix}align-self-#{$breakpoint}-baseline {
            align-self: baseline !important;
        }
        .#{$prefix}align-self-#{$breakpoint}-stretch {
            align-self: stretch !important;
        }

        // Order
        .#{$prefix}order-#{$breakpoint}-first {
            order: -1 !important;
        }
        @for $i from 0 through 5 {
            .#{$prefix}order-#{$breakpoint}-#{$i} {
                order: $i !important;
            }
        }
        .#{$prefix}order-#{$breakpoint}-last {
            order: 6 !important;
        }

        // Spacing utilities - margin
        @each $infix, $props in $margin-props {
            // 生成數值邊距
            @each $space, $value in $spacers {
                .#{$prefix}m#{$infix}-#{$breakpoint}-#{$space} {
                    @if type-of($props) == "list" {
                        @each $prop in $props {
                            #{$prop}: $value !important;
                        }
                    } @else {
                        #{$props}: $value !important;
                    }
                }
            }

            // auto
            .#{$prefix}m#{$infix}-#{$breakpoint}-auto {
                @if type-of($props) == "list" {
                    @each $prop in $props {
                        #{$prop}: auto !important;
                    }
                } @else {
                    #{$props}: auto !important;
                }
            }
        }

        // Spacing utilities - padding
        @each $infix, $props in $padding-props {
            // 生成數值邊距
            @each $space, $value in $spacers {
                .#{$prefix}p#{$infix}-#{$breakpoint}-#{$space} {
                    @if type-of($props) == "list" {
                        @each $prop in $props {
                            #{$prop}: $value !important;
                        }
                    } @else {
                        #{$props}: $value !important;
                    }
                }
            }
        }
    }
}
